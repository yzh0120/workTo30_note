/*https://blog.csdn.net/weixin_48181168/article/details/120158346
完成响应式原理, 需要3个步骤
1  数据代理  侦测一个对象的变化,                         在数据变更的时候通知 订阅者更新视图
2  收集依赖 当对象的属性发生变化时，可以通知那些曾经使用了该对象的地方
3   发布订阅模式  ,收集依赖需要为依赖找一个存储依赖的地方，为此vue创建了订阅者用来对依赖进行操作
    它的主要作用是用来存放 Watcher 观察者对象。我们可以把Watcher理解成一个中介的角色，数据发生变化时通知它，然后它再通知其他地方。


之所以引入观察者模式,是因为
  当属性发生变化后，我们要通知用到数据的地方，而使用这个数据的地方有很多，而且类型还不一样，既有可能是模板，
  所以可以把Watcher理解成一个中介的角色，数据发生变化时通知它，然后它再通知其他地方
  
*/ 
