TreeSet<Integer>  h =  new TreeSet<Integer>()

元素有序 :不是指进出存储和取出的顺序有序,而是按照一定的规则进行排序,具体排序方法取决于构造方法
		TreeSet(),根据其元素的自然排序进行(从小到大)
		TreeSet(Comparator comparator)  10_比较器排序的使用根据指定的比较器进行排序
没有带index 的方法 不能使用普通for
间接 继承了Set接口 ,不含重复元素


------------------------------------------------------------
自然排序 Comparable  

pubiic class Student implements  Comparable<Studeng>{
	如果用 自然排序 给类排序,需要类实现 Comparable 接口
	public int CompareTo(s1){  s1表示前一个类 this当前类
		
	}
	在 int  CompareTo 方法内返回
		0   不排序(被认为同一个元素,不添加进去)
		1   升序
		-1   降序
}

结论:
	用TreeSet集合存储自定义对象,无参构造方法使用的是自然排序对元素进行排序的
	自然排序:就是让元素所属的类实现Comparable接口,重写CompareTo() 方法
	按照主要条件和次要条件排序
-----------------------------------------------------------------------------
比较器 Comparator

TreeSet<Student>  h =  new TreeSet<Student>(
	new Comparator<Student>(){
		public int Compare(s1,s2){ s1 当前类  , s2前一个类
				
		}
	}
)

结论:
	用TreeSet集合存储自定义对象的时候,带参构造方法使用的是 比较器排序 对元素进行排序
	比较器排序,就是让集合构造方法接收Comparator的实现类对象,重写Compare(s1,s2)方法
	按照主要条件和次要条件排序